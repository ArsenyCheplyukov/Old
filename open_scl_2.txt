min_distance = 0.1+(min([100 if (i[0]-j[0])**2+(i[1]-j[1])**2+(i[2]-j[2])**2 == 0 else (i[0]-j[0])**2+(i[1]-j[1])**2+(i[2]-j[2])**2 for i in points for j in points]))**.5
print(min_distance)
indexes_list = np.linspace(0, 31, 32).astype(int)
all_pairs = {((i,j) if i<j else (j, i)) if (0.1 < ((points[i][0]-points[j][0])**2+(points[i][1]-points[j][1])**2+(points[i][2]-points[j][2])**2)**.5 < min_distance) else (j ,j) for i in indexes_list for j in indexes_list}
all_pairs_new = set(filter(lambda x: x[0] != x[1], all_pairs))
print(len(all_pairs_new))
print(sum(i[0] == 0 for i in all_pairs_new))
all_pairs_new